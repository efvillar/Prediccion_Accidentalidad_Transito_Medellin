y = ~HERIDO,
type = "scatter" ,mode = "lines",
name='Real',
line=list(width=1,color='rgb(205, 12, 24)'))%>%
add_trace(y= ~y_test_pred_rf,
name='Modelo lm',
line=list(width=1,color='rgb(22, 96, 167)'))%>%
layout(title='Total Heridos en accidentes',
xaxis=list(title="Fecha"),
yaxis=list(title="Heridos"),
legend = list(x = 0.75, y = 0.9))
plot_ly (data=Train_D_Dataset,
x = ~FECHA,
y = ~HERIDO,
type = "scatter" ,mode = "lines",
name='Real',
line=list(width=1,color='rgb(205, 12, 24)'))%>%
add_trace(y= ~y_tr_pred_rf,
name='Modelo rf',
line=list(width=1,color='rgb(22, 96, 167)'))%>%
layout(title='Total Heridos en accidentes',
xaxis=list(title="Fecha"),
yaxis=list(title="Heridos"),
legend = list(x = 0.75, y = 0.9))
trcntrl = trainControl(method="cv", number=10)
caret_rf_fit_m = caret::train(MUERTO~Ano_v1+Ano_v1*DIA_SEMANA+SEMANA+DIA_SEMANA+Semana.Santa+Feriado_Lunes+Feriado_Otro+Feria_Flores+Madre, data=Train_D_Dataset,
method = "rf", trControl = trcntrl,
prox=TRUE,allowParallel=TRUE)
summary(caret_rf_fit_m)
caret_rf_fit_m
plot(caret_rf_fit_m)
y_tr_pred_rf_m<-predict(caret_rf_fit_m,Train_D_Dataset[,c("Ano_v1","SEMANA","DIA_SEMANA","Semana.Santa","Feriado_Lunes","Feriado_Otro","Feria_Flores","Madre")])
mse_tr_rf_m<-mean((Train_D_Dataset$MUERTO-y_tr_pred_rf_m)^2) # calcula el mse de entrenamiento
RMSE_tr_rf_m = sqrt(mse_tr_rf_m)
mse_tr_rf_m
RMSE_tr_rf_m
y_test_pred_rf_m<-predict(caret_rf_fit_m,Test_D_Dataset[,c("Ano_v1","SEMANA","DIA_SEMANA","Semana.Santa","Feriado_Lunes","Feriado_Otro","Feria_Flores","Madre")])
mse_test_rf_m<-mean((Test_D_Dataset$MUERTO-y_test_pred_rf_m)^2) # calcula el mse de entrenamiento
RMSE_test_rf_m = sqrt(mse_test_rf_m)
mse_test_rf_m
RMSE_test_rf_m
plot_ly (data=Test_D_Dataset,
x = ~FECHA,
y = ~MUERTO,
type = "scatter" ,mode = "lines",
name='Real',
line=list(width=1,color='rgb(205, 12, 24)'))%>%
add_trace(y= ~y_test_pred_rf_m,
name='Modelo lm',
line=list(width=1,color='rgb(22, 96, 167)'))%>%
layout(title='Total muertos enaAccidentes',
xaxis=list(title="Fecha"),
yaxis=list(title="Muertes"),
legend = list(x = 0.75, y = 0.9))
plot_ly (data=Test_D_Dataset,
x = ~FECHA,
y = ~MUERTO,
type = "scatter" ,mode = "lines",
name='Real',
line=list(width=1,color='rgb(205, 12, 24)'))%>%
add_trace(y= ~y_test_pred_rf_m,
name='Modelo lm',
line=list(width=1,color='rgb(22, 96, 167)'))%>%
layout(title='Total muertos en accidentes',
xaxis=list(title="Fecha"),
yaxis=list(title="Muertes"),
legend = list(x = 0.75, y = 0.9))
plot_ly (data=Test_D_Dataset,
x = ~FECHA,
y = ~HERIDO,
type = "scatter" ,mode = "lines",
name='Real',
line=list(width=1,color='rgb(205, 12, 24)'))%>%
add_trace(y=  ~y_test_pred_rf,
name='Modelo lm',
line=list(width=1,color='rgb(22, 96, 167)'))%>%
layout(title='Total Heridos en accidentes',
xaxis=list(title="Fecha"),
yaxis=list(title="Heridos"),
legend = list(x = 0.75, y = 0.9))
plot_ly (data=Train_D_Dataset,
x = ~FECHA,
y = ~MUERTO,
type = "scatter" ,mode = "lines",
name='Real',
line=list(width=1,color='rgb(205, 12, 24)'))%>%
add_trace(y= ~y_tr_pred_rf_m,
name='Modelo rf',
line=list(width=1,color='rgb(22, 96, 167)'))%>%
layout(title='Total muertes en accidentes',
xaxis=list(title="Fecha"),
yaxis=list(title="Muertes"),
legend = list(x = 0.75, y = 0.9))
trcntrl = trainControl(method="cv", number=10)
caret_rf_fit_sd = caret::train(SOLO_DANOS~Ano_v1+Ano_v1*DIA_SEMANA+SEMANA+DIA_SEMANA+Semana.Santa+Feriado_Lunes+Feriado_Otro+Feria_Flores+Madre, data=Train_D_Dataset,
method = "rf", trControl = trcntrl,
prox=TRUE,allowParallel=TRUE)
summary(caret_rf_fit_sd)
caret_rf_fit_sd
plot(caret_rf_fit_sd)
y_tr_pred_rf_sd<-predict(caret_rf_fit_sd,Train_D_Dataset[,c("Ano_v1","SEMANA","DIA_SEMANA","Semana.Santa","Feriado_Lunes","Feriado_Otro","Feria_Flores","Madre")])
mse_tr_rf_sd<-mean((Train_D_Dataset$SOLO_DANOS-y_tr_pred_rf_sd)^2) # calcula el mse de entrenamiento
RMSE_tr_rf_sd = sqrt(mse_tr_rf_sd)
mse_tr_rf_sd
RMSE_tr_rf_sd
y_test_pred_rf_sd<-predict(caret_rf_fit_sd,Test_D_Dataset[,c("Ano_v1","SEMANA","DIA_SEMANA","Semana.Santa","Feriado_Lunes","Feriado_Otro","Feria_Flores","Madre")])
mse_test_rf_sd<-mean((Test_D_Dataset$SOLO_DANOS-y_test_pred_rf_sd)^2) # calcula el mse de entrenamiento
RMSE_test_rf_sd = sqrt(mse_test_rf_sd)
mse_test_rf_sd
RMSE_test_rf_sd
plot_ly (data=Test_D_Dataset,
x = ~FECHA,
y = ~SOLO_DANOS,
type = "scatter" ,mode = "lines",
name='Real',
line=list(width=1,color='rgb(205, 12, 24)'))%>%
add_trace(y= ~y_test_pred_rf,
name='Modelo lm',
line=list(width=1,color='rgb(22, 96, 167)'))%>%
layout(title='Total Daños',
xaxis=list(title="Fecha"),
yaxis=list(title="Daños en accidentes"),
legend = list(x = 0.75, y = 0.9))
plot_ly (data=Train_D_Dataset,
x = ~FECHA,
y = ~Total_Accidentes,
type = "scatter" ,mode = "lines",
name='Real',
line=list(width=1,color='rgb(205, 12, 24)'))%>%
add_trace(y= ~y_tr_pred_rf,
name='Modelo rf',
line=list(width=1,color='rgb(22, 96, 167)'))%>%
layout(title='Total Daños',
xaxis=list(title="Fecha"),
yaxis=list(title="Daños en accidentes"),
legend = list(x = 0.75, y = 0.9))
plot_ly (data=Test_D_Dataset,
x = ~FECHA,
y = ~SOLO_DANOS,
type = "scatter" ,mode = "lines",
name='Real',
line=list(width=1,color='rgb(205, 12, 24)'))%>%
add_trace(y= ~y_test_pred_rf_sd,
name='Modelo lm',
line=list(width=1,color='rgb(22, 96, 167)'))%>%
layout(title='Total Daños',
xaxis=list(title="Fecha"),
yaxis=list(title="Daños en accidentes"),
legend = list(x = 0.75, y = 0.9))
plot_ly (data=Train_D_Dataset,
x = ~FECHA,
y = ~Total_Accidentes,
type = "scatter" ,mode = "lines",
name='Real',
line=list(width=1,color='rgb(205, 12, 24)'))%>%
add_trace(y= ~y_tr_pred_rf_sd,
name='Modelo rf',
line=list(width=1,color='rgb(22, 96, 167)'))%>%
layout(title='Total Daños',
xaxis=list(title="Fecha"),
yaxis=list(title="Daños en accidentes"),
legend = list(x = 0.75, y = 0.9))
plot_ly (data=Train_D_Dataset,
x = ~FECHA,
y = ~SOLO_DANOS,
type = "scatter" ,mode = "lines",
name='Real',
line=list(width=1,color='rgb(205, 12, 24)'))%>%
add_trace(y= ~y_tr_pred_rf_sd,
name='Modelo rf',
line=list(width=1,color='rgb(22, 96, 167)'))%>%
layout(title='Total Daños',
xaxis=list(title="Fecha"),
yaxis=list(title="Daños en accidentes"),
legend = list(x = 0.75, y = 0.9))
plot_ly (data=Train_D_Dataset,
x = ~FECHA,
y = ~HERIDO,
type = "scatter" ,mode = "lines",
name='Real',
line=list(width=1,color='rgb(205, 12, 24)'))%>%
add_trace(y= ~y_tr_pred_lm,
name='Modelo lm',
line=list(width=1,color='rgb(22, 96, 167)'))%>%
layout(title='Total heridos en accidentes',
xaxis=list(title="Fecha"),
yaxis=list(title="Heridos"),
legend = list(x = 0.75, y = 0.9))
plot_ly (data=Test_D_Dataset,
x = ~FECHA,
y = ~HERIDO,
type = "scatter" ,mode = "lines",
name='Real',
line=list(width=1,color='rgb(205, 12, 24)'))%>%
add_trace(y= ~y_test_pred_lm,
name='Modelo lm',
line=list(width=1,color='rgb(22, 96, 167)'))%>%
layout(title='Total heridos en accidentes',
xaxis=list(title="Fecha"),
yaxis=list(title="Heridos"),
legend = list(x = 0.75, y = 0.9))
plot_ly (data=Train_D_Dataset,
x = ~FECHA,
y = ~MUERTO,
type = "scatter" ,mode = "lines",
name='Real',
line=list(width=1,color='rgb(205, 12, 24)'))%>%
add_trace(y= ~y_tr_pred_lm_m,
name='Modelo lm',
line=list(width=1,color='rgb(22, 96, 167)'))%>%
layout(title='Total muertes en accidentes',
xaxis=list(title="Fecha"),
yaxis=list(title="Muertes"),
legend = list(x = 0.75, y = 0.9))
trcntrl = trainControl(method="cv", number=10)
caret_lm_fit_m = caret::train(MUERTO~Ano_v1+Ano_v1*DIA_SEMANA+SEMANA+DIA_SEMANA+Semana.Santa+Feriado_Lunes+Feriado_Otro+Feria_Flores+Madre, data=Train_D_Dataset,
method = "lm", trControl = trcntrl,
preProcess=c("center", "scale"),
tuneLength = 10)
summary(caret_lm_fit_m)
caret_lm_fit_m
y_tr_pred_lm_m<-predict(caret_lm_fit_m,Train_D_Dataset[,c("Ano_v1","SEMANA","DIA_SEMANA","Semana.Santa","Feriado_Lunes","Feriado_Otro","Feria_Flores","Madre")])
mse_tr_lm_m<-mean((Train_D_Dataset$MUERTO-y_tr_pred_lm_m)^2) # calcula el mse de entrenamiento
RMSE_tr_lm_m = sqrt(mse_tr_lm_m)
mse_tr_lm_m
RMSE_tr_lm_m
y_test_pred_lm_m<-predict(caret_lm_fit_m,Test_D_Dataset[,c("Ano_v1","SEMANA","DIA_SEMANA","Semana.Santa","Feriado_Lunes","Feriado_Otro","Feria_Flores","Madre")])
mse_test_lm_m<-mean((Test_D_Dataset$MUERTO-y_test_pred_lm_m)^2) # calcula el mse de entrenamiento
RMSE_test_lm_m = sqrt(mse_test_lm_m)
mse_test_lm_m
RMSE_test_lm_m
plot_ly (data=Train_D_Dataset,
x = ~FECHA,
y = ~MUERTO,
type = "scatter" ,mode = "lines",
name='Real',
line=list(width=1,color='rgb(205, 12, 24)'))%>%
add_trace(y= ~y_tr_pred_lm_m,
name='Modelo lm',
line=list(width=1,color='rgb(22, 96, 167)'))%>%
layout(title='Total muertes en accidentes',
xaxis=list(title="Fecha"),
yaxis=list(title="Muertes"),
legend = list(x = 0.75, y = 0.9))
trcntrl = trainControl(method="cv", number=10)
caret_lm_fit_sd = caret::train(SOLO_DANOS~Ano_v1+Ano_v1*DIA_SEMANA+SEMANA+DIA_SEMANA+Semana.Santa+Feriado_Lunes+Feriado_Otro+Feria_Flores+Madre, data=Train_D_Dataset,
method = "lm", trControl = trcntrl,
preProcess=c("center", "scale"),
tuneLength = 10)
summary(caret_lm_fit_sd)
plot_ly (data=Test_D_Dataset,
x = ~FECHA,
y = ~MUERTO,
type = "scatter" ,mode = "lines",
name='Real',
line=list(width=1,color='rgb(205, 12, 24)'))%>%
add_trace(y= ~y_test_pred_lm_m,
name='Modelo lm',
line=list(width=1,color='rgb(22, 96, 167)'))%>%
layout(title='Total muertes en accidentes',
xaxis=list(title="Fecha"),
yaxis=list(title="Muertes"),
legend = list(x = 0.75, y = 0.9))
trcntrl = trainControl(method="cv", number=10)
caret_lm_fit_sd = caret::train(SOLO_DANOS~Ano_v1+Ano_v1*DIA_SEMANA+SEMANA+DIA_SEMANA+Semana.Santa+Feriado_Lunes+Feriado_Otro+Feria_Flores+Madre, data=Train_D_Dataset,
method = "lm", trControl = trcntrl,
preProcess=c("center", "scale"),
tuneLength = 10)
y_tr_pred_lm_sd<-predict(caret_lm_fit_sd,Train_D_Dataset[,c("Ano_v1","SEMANA","DIA_SEMANA","Semana.Santa","Feriado_Lunes","Feriado_Otro","Feria_Flores","Madre")])
mse_tr_lm_sd<-mean((Train_D_Dataset$SOLO_DANOS-y_tr_pred_lm_sd)^2) # calcula el mse de entrenamiento
RMSE_tr_lm_sd = sqrt(mse_tr_lm_sd)
mse_tr_lm_sd
RMSE_tr_lm_sd
y_test_pred_lm_sd<-predict(caret_lm_fit_sd,Test_D_Dataset[,c("Ano_v1","SEMANA","DIA_SEMANA","Semana.Santa","Feriado_Lunes","Feriado_Otro","Feria_Flores","Madre")])
mse_test_lm_sd<-mean((Test_D_Dataset$SOLO_DANOS-y_test_pred_lm_sd)^2) # calcula el mse de entrenamiento
RMSE_test_lm_sd = sqrt(mse_test_lm_sd)
mse_test_lm_sd
RMSE_test_lm_sd
plot_ly (data=Train_D_Dataset,
x = ~FECHA,
y = ~HERIDO,
type = "scatter" ,mode = "lines",
name='Real',
line=list(width=1,color='rgb(205, 12, 24)'))%>%
add_trace(y= ~y_tr_pred_tree,
name='Modelo tree',
line=list(width=1,color='rgb(22, 96, 167)'))%>%
layout(title='Total Heridos en accidentes',
xaxis=list(title="Fecha"),
yaxis=list(title="Heridos"),
legend = list(x = 0.75, y = 0.9))
plot_ly (data=Test_D_Dataset,
x = ~FECHA,
y = ~HERIDO,
type = "scatter" ,mode = "lines",
name='Real',
line=list(width=1,color='rgb(205, 12, 24)'))%>%
add_trace(y= ~y_test_pred_tree,
name='Modelo tree',
line=list(width=1,color='rgb(22, 96, 167)'))%>%
layout(title='Total Heridos en accidentes',
xaxis=list(title="Fecha"),
yaxis=list(title="Heridos"),
legend = list(x = 0.75, y = 0.9))
plot_ly (data=Train_D_Dataset,
x = ~FECHA,
y = ~MUERTO,
type = "scatter" ,mode = "lines",
name='Real',
line=list(width=1,color='rgb(205, 12, 24)'))%>%
add_trace(y= ~y_tr_pred_tree_m,
name='Modelo tree',
line=list(width=1,color='rgb(22, 96, 167)'))%>%
layout(title='Total Muertes en accidentes',
xaxis=list(title="Fecha"),
yaxis=list(title="Muertos"),
legend = list(x = 0.75, y = 0.9))
plot_ly (data=Test_D_Dataset,
x = ~FECHA,
y = ~MUERTO,
type = "scatter" ,mode = "lines",
name='Real',
line=list(width=1,color='rgb(205, 12, 24)'))%>%
add_trace(y= ~y_test_pred_tree_m,
name='Modelo tree',
line=list(width=1,color='rgb(22, 96, 167)'))%>%
layout(title='Total Muertos en accidentes',
xaxis=list(title="Fecha"),
yaxis=list(title="Muertes"),
legend = list(x = 0.75, y = 0.9))
plot_ly (data=Train_D_Dataset,
x = ~FECHA,
y = ~SOLO_DANOS,
type = "scatter" ,mode = "lines",
name='Real',
line=list(width=1,color='rgb(205, 12, 24)'))%>%
add_trace(y= ~y_tr_pred_tree_sd,
name='Modelo tree',
line=list(width=1,color='rgb(22, 96, 167)'))%>%
layout(title='Total Daños',
xaxis=list(title="Fecha"),
yaxis=list(title="Daños en los accidentes"),
legend = list(x = 0.75, y = 0.9))
plot_ly (data=Test_D_Dataset,
x = ~FECHA,
y = ~HERIDO,
type = "scatter" ,mode = "lines",
name='Real',
line=list(width=1,color='rgb(205, 12, 24)'))%>%
add_trace(y= ~y_test_pred_tree_sd,
name='Modelo tree',
line=list(width=1,color='rgb(22, 96, 167)'))%>%
layout(title='Total Daños',
xaxis=list(title="Fecha"),
yaxis=list(title="Daños en los accidentes"),
legend = list(x = 0.75, y = 0.9))
plot_ly (data=Test_D_Dataset,
x = ~FECHA,
y = ~HERIDO,
type = "scatter" ,mode = "lines",
name='Real',
line=list(width=1,color='rgb(205, 12, 24)'))%>%
add_trace(y=  ~y_test_pred_rf,
name='Modelo rf',
line=list(width=1,color='rgb(22, 96, 167)'))%>%
layout(title='Total Heridos en accidentes',
xaxis=list(title="Fecha"),
yaxis=list(title="Heridos"),
legend = list(x = 0.75, y = 0.9))
plot_ly (data=Test_D_Dataset,
x = ~FECHA,
y = ~MUERTO,
type = "scatter" ,mode = "lines",
name='Real',
line=list(width=1,color='rgb(205, 12, 24)'))%>%
add_trace(y= ~y_test_pred_rf_m,
name='Modelo rf',
line=list(width=1,color='rgb(22, 96, 167)'))%>%
layout(title='Total muertos en accidentes',
xaxis=list(title="Fecha"),
yaxis=list(title="Muertes"),
legend = list(x = 0.75, y = 0.9))
plot_ly (data=Test_D_Dataset,
x = ~FECHA,
y = ~SOLO_DANOS,
type = "scatter" ,mode = "lines",
name='Real',
line=list(width=1,color='rgb(205, 12, 24)'))%>%
add_trace(y= ~y_test_pred_rf_sd,
name='Modelo rf',
line=list(width=1,color='rgb(22, 96, 167)'))%>%
layout(title='Total Daños',
xaxis=list(title="Fecha"),
yaxis=list(title="Daños en accidentes"),
legend = list(x = 0.75, y = 0.9))
Tipo_de_accidentes= c("Total Heridos","Total Muertes","Total Daños")
RMSE_Train_lm = round(c(RMSE_tr_lm,RMSE_tr_lm_m,RMSE_tr_lm_sd), 3)
RMSE_Test_lm = round(c(RMSE_test_lm,RMSE_test_lm_m,RMSE_test_lm_sd),3)
Tabla_lm = data.frame (cbind(Tipo_de_accidentes,RMSE_Train_lm,RMSE_Test_lm))
Tabla_lm
plot_ly (data=Test_D_Dataset,
x = ~FECHA,
y = ~SOLO_DANOS,
type = "scatter" ,mode = "lines",
name='Real',
line=list(width=1,color='rgb(205, 12, 24)'))%>%
add_trace(y= ~y_test_pred_glm_sd,
name='Modelo glm',
line=list(width=1,color='rgb(22, 96, 167)'))%>%
layout(title='Total Daños',
xaxis=list(title="Fecha"),
yaxis=list(title="Daños en los accidentes"),
legend = list(x = 0.75, y = 0.9))
Tipo_de_accidentes= c("Total Heridos","Total Muertes","Total Daños")
RMSE_Train_glm = round(c(RMSE_tr_glm,RMSE_tr_glm_m,RMSE_tr_glm_sd), 3)
Tipo_de_accidentes= c("Total Heridos","Total Muertes","Total Daños")
RMSE_Train_glm = round(c(RMSE_tr_glm,RMSE_tr_glm_m,RMSE_tr_glm_sd), 3)
Tipo_de_accidentes= c("Total Heridos","Total Muertes","Total Daños")
RMSE_Train_glm = round(c(RMSE_tr_glm,RMSE_tr_glm_m,RMSE_tr_glm_sd), 3)
glm_fit_m<-glm(MUERTO~Ano_v1+Ano_v1*DIA_SEMANA+SEMANA+DIA_SEMANA+Semana.Santa+Feriado_Lunes+Feriado_Otro+Feria_Flores+Madre, data=Train_D_Dataset, family = "poisson")
summary(glm_fit)
glm_fit_m
y_tr_pred_glm_m<-predict(glm_fit_m,Train_D_Dataset[,c("Ano_v1","SEMANA","DIA_SEMANA","Semana.Santa","Feriado_Lunes","Feriado_Otro","Feria_Flores","Madre")],type="response")
mse_tr_glm_m<-mean((Train_D_Dataset$MUERTO-y_tr_pred_glm_m)^2) # calcula el mse de entrenamiento
RMSE_tr_glm_m = sqrt(mse_tr_glm_m)
mse_tr_glm_m
RMSE_tr_glm_m
y_test_pred_glm_m<-predict(glm_fit_m,Test_D_Dataset[,c("Ano_v1","SEMANA","DIA_SEMANA","Semana.Santa","Feriado_Lunes","Feriado_Otro","Feria_Flores","Madre")],type="response")
mse_test_glm_m<-mean((Train_D_Dataset$MUERTO-y_test_pred_glm_m)^2) # calcula el mse de entrenamiento
RMSE_test_glm_m = sqrt(mse_test_glm_m)
mse_test_glm_m
RMSE_test_glm_m
plot_ly (data=Train_D_Dataset,
x = ~FECHA,
y = ~MUERTO,
type = "scatter" ,mode = "lines",
name='Real',
line=list(width=1,color='rgb(205, 12, 24)'))%>%
add_trace(y= ~y_tr_pred_glm_m,
name='Modelo glm',
line=list(width=1,color='rgb(22, 96, 167)'))%>%
layout(title='Total muertes en accidentes',
xaxis=list(title="Fecha"),
yaxis=list(title="Muertes"),
legend = list(x = 0.75, y = 0.9))
plot_ly (data=Test_D_Dataset,
x = ~FECHA,
y = ~MUERTO,
type = "scatter" ,mode = "lines",
name='Real',
line=list(width=1,color='rgb(205, 12, 24)'))%>%
add_trace(y= ~y_test_pred_glm,
name='Modelo glm',
line=list(width=1,color='rgb(22, 96, 167)'))%>%
layout(title='Total muertes en accidentes',
xaxis=list(title="Fecha"),
yaxis=list(title="Muertes"),
legend = list(x = 0.75, y = 0.9))
glm_fit_sd<-glm(SOLO_DANOS~Ano_v1+Ano_v1*DIA_SEMANA+SEMANA+DIA_SEMANA+Semana.Santa+Feriado_Lunes+Feriado_Otro+Feria_Flores+Madre, data=Train_D_Dataset, family = "poisson")
summary(glm_fit_sd)
glm_fit_sd
y_tr_pred_glm_sd<-predict(glm_fit_sd,Train_D_Dataset[,c("Ano_v1","SEMANA","DIA_SEMANA","Semana.Santa","Feriado_Lunes","Feriado_Otro","Feria_Flores","Madre")],type="response")
mse_tr_glm_sd<-mean((Train_D_Dataset$SOLO_DANOS-y_tr_pred_glm_sd)^2) # calcula el mse de entrenamiento
RMSE_tr_glm_sd = sqrt(mse_tr_glm_sd)
mse_tr_glm_sd
RMSE_tr_glm_sd
y_test_pred_glm_sd<-predict(glm_fit_sd,Test_D_Dataset[,c("Ano_v1","SEMANA","DIA_SEMANA","Semana.Santa","Feriado_Lunes","Feriado_Otro","Feria_Flores","Madre")],type="response")
mse_test_glm_sd<-mean((Train_D_Dataset$SOLO_DANOS-y_test_pred_glm_sd)^2) # calcula el mse de entrenamiento
RMSE_test_glm_sd = sqrt(mse_test_glm_sd)
mse_test_glm_sd
RMSE_test_glm_sd
plot_ly (data=Train_D_Dataset,
x = ~FECHA,
y = ~SOLO_DANOS,
type = "scatter" ,mode = "lines",
name='Real',
line=list(width=1,color='rgb(205, 12, 24)'))%>%
add_trace(y= ~y_tr_pred_glm_sd,
name='Modelo glm',
line=list(width=1,color='rgb(22, 96, 167)'))%>%
layout(title='Total Daños',
xaxis=list(title="Fecha"),
yaxis=list(title="Daños en los accidentes"),
legend = list(x = 0.75, y = 0.9))
plot_ly (data=Test_D_Dataset,
x = ~FECHA,
y = ~SOLO_DANOS,
type = "scatter" ,mode = "lines",
name='Real',
line=list(width=1,color='rgb(205, 12, 24)'))%>%
add_trace(y= ~y_test_pred_glm_sd,
name='Modelo glm',
line=list(width=1,color='rgb(22, 96, 167)'))%>%
layout(title='Total Daños',
xaxis=list(title="Fecha"),
yaxis=list(title="Daños en los accidentes"),
legend = list(x = 0.75, y = 0.9))
Tipo_de_accidentes= c("Total Heridos","Total Muertes","Total Daños")
RMSE_Train_glm = round(c(RMSE_tr_glm,RMSE_tr_glm_m,RMSE_tr_glm_sd), 3)
RMSE_Test_glm = round(c(RMSE_test_glm,RMSE_test_glm_m,RMSE_test_glm_sd),3)
Tabla_glm = data.frame (cbind(Tipo_de_accidentes,RMSE_Train_glm,RMSE_Test_glm))
Tabla_glm
Tipo_de_accidentes= c("Total Heridos","Total Muertes","Total Daños")
RMSE_Train_tree = round(c(RMSE_tr_tree,RMSE_tr_tree_m,RMSE_tr_tree_sd), 3)
RMSE_Test_tree = round(c(RMSE_test_tree,RMSE_test_tree_m,RMSE_test_tree_sd),3)
Tabla_tree = data.frame (cbind(Tipo_de_accidentes,RMSE_Train_tree,RMSE_Test_tree))
Tabla_tree
Tipo_de_accidentes= c("Total Heridos","Total Muertes","Total Daños")
RMSE_Train_rf = round(c(RMSE_tr_rf,RMSE_tr_rf_m,RMSE_tr_rf_sd), 3)
RMSE_Test_rf = round(c(RMSE_test_rf,RMSE_test_rf_m,RMSE_test_rf_sd),3)
Tabla_rf = data.frame (cbind(Tipo_de_accidentes,RMSE_Train_rf,RMSE_Test_rf))
Tabla_rf
